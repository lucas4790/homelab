apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authentic.fullname" . }}
  labels:
    {{- include "authentic.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "authentic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authentic.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          args: ["server"]
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP
          env:
            - name: AUTHENTIK_SECRET_KEY
              value: {{ .Values.authentic.secretKey | quote }}
            - name: AUTHENTIK_REDIS__HOST
              value: {{ include "authentic.fullname" . }}-redis-master
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: {{ include "authentic.fullname" . }}-postgresql
            - name: AUTHENTIK_POSTGRESQL__USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            - name: AUTHENTIK_POSTGRESQL__NAME
              value: {{ .Values.postgresql.auth.database | quote }}
          livenessProbe:
            httpGet:
              path: /-/health/live/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/health/ready/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          args: ["worker"]
          env:
            - name: AUTHENTIK_SECRET_KEY
              value: {{ .Values.authentic.secretKey | quote }}
            - name: AUTHENTIK_REDIS__HOST
              value: {{ include "authentic.fullname" . }}-redis-master
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: {{ include "authentic.fullname" . }}-postgresql
            - name: AUTHENTIK_POSTGRESQL__USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            - name: AUTHENTIK_POSTGRESQL__NAME
              value: {{ .Values.postgresql.auth.database | quote }}
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: media
              mountPath: /media
      volumes:
        - name: media
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "authentic.fullname" . }}-media
          {{- else }}
          emptyDir: {}
          {{- end }}
